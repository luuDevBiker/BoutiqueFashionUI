{"ast":null,"code":"var _jsxFileName = \"D:\\\\FPT_School\\\\learnCsharp\\\\BoutiqueFashionUI\\\\src\\\\components\\\\infinityList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from './grid';\nimport ProductCard from './productCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfinityList = props => {\n  _s();\n\n  const perLoad = 6; // items each load\n\n  const listRef = useRef(null);\n  const [data, setData] = useState([]);\n  const [load, setLoad] = useState(true);\n  const [index, setIndex] = useState(0);\n  useEffect(() => {\n    setData(props.data.slice(0, perLoad));\n    setIndex(1);\n  }, [props.data]);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (listRef && listRef.current) {\n        if (window.scrollY + window.innerHeight >= listRef.current.clientHeight + listRef.current.offsetTop + 200) {\n          console.log(\"bottom reach\");\n          setLoad(true);\n        }\n      }\n    });\n  }, [listRef]);\n  useEffect(() => {\n    const getItems = () => {\n      const pages = Math.floor(props.data.length / perLoad);\n      const maxIndex = props.data.length % perLoad === 0 ? pages : pages + 1;\n\n      if (load && index <= maxIndex) {\n        const start = perLoad * index;\n        const end = start + perLoad;\n        setData(data.concat(props.data.slice(start, end)));\n        setIndex(index + 1);\n      }\n    };\n\n    getItems();\n    setLoad(false);\n  }, [load, index, data, props.data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: listRef,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      col: 3,\n      mdCol: 2,\n      smCol: 1,\n      gap: 20,\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(ProductCard, {\n        img01: item.image01,\n        img02: item.image02,\n        name: item.title,\n        price: Number(item.price),\n        slug: item.slug\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InfinityList, \"AENhqrXICbMD9iIt8+4R76Tu7cw=\");\n\n_c = InfinityList;\nInfinityList.propTypes = {\n  data: PropTypes.array.isRequired\n};\nexport default InfinityList;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfinityList\");","map":{"version":3,"names":["React","useEffect","useRef","useState","PropTypes","Grid","ProductCard","InfinityList","props","perLoad","listRef","data","setData","load","setLoad","index","setIndex","slice","window","addEventListener","current","scrollY","innerHeight","clientHeight","offsetTop","console","log","getItems","pages","Math","floor","length","maxIndex","start","end","concat","map","item","image01","image02","title","Number","price","slug","propTypes","array","isRequired"],"sources":["D:/FPT_School/learnCsharp/BoutiqueFashionUI/src/components/infinityList.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Grid from './grid'\r\nimport ProductCard from './productCard'\r\n\r\nconst InfinityList = props => {\r\n\r\n    const perLoad = 6 // items each load\r\n\r\n    const listRef = useRef(null)\r\n    \r\n    const [data, setData] = useState([])\r\n\r\n    const [load, setLoad] = useState(true)\r\n\r\n    const [index, setIndex] = useState(0)\r\n\r\n    useEffect(() => {\r\n        setData(props.data.slice(0, perLoad))\r\n        setIndex(1)\r\n    }, [props.data])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (listRef && listRef.current) {\r\n                if (window.scrollY + window.innerHeight >= listRef.current.clientHeight + listRef.current.offsetTop + 200) {\r\n                    console.log(\"bottom reach\")\r\n                    setLoad(true)\r\n                }\r\n            }\r\n            \r\n        })\r\n    }, [listRef])\r\n\r\n    useEffect(() => {\r\n        const getItems = () => {\r\n            const pages = Math.floor(props.data.length / perLoad)\r\n            const maxIndex = props.data.length % perLoad === 0 ? pages : pages + 1\r\n\r\n            if (load && index <= maxIndex) {\r\n                const start = perLoad * index\r\n                const end = start + perLoad\r\n\r\n                setData(data.concat(props.data.slice(start, end)))\r\n                setIndex(index + 1)\r\n            }\r\n        }\r\n        getItems()\r\n        setLoad(false)\r\n    }, [load, index, data, props.data])\r\n\r\n    return (\r\n        <div ref={listRef}>\r\n            <Grid\r\n                col={3}\r\n                mdCol={2}\r\n                smCol={1}\r\n                gap={20}\r\n            >\r\n                {\r\n                    data.map((item, index) => (\r\n                        <ProductCard\r\n                            key={index}\r\n                            img01={item.image01}\r\n                            img02={item.image02}\r\n                            name={item.title}\r\n                            price={Number(item.price)}\r\n                            slug={item.slug}\r\n                        />\r\n                    ))\r\n                }\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nInfinityList.propTypes = {\r\n    data: PropTypes.array.isRequired\r\n}\r\n\r\nexport default InfinityList\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}